Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-05-29T18:36:20+08:00

====== 04 Switch Statement ======
Created Wednesday 29 May 2019

switch语句			一个switch语句允许测试一个变量等于多个值的情况。

一个switch语句允许测试一个变量等于多个值时的情况。每个值称为一个case，且被测试的变量会对每个switch case进行检查。

语法
C++中switch语句的语法：
switch(expression){
	case constant-expresion :
		statement(s);
		break; 	//optional
	case constant-expression:
		statement(s);
		break;		//optional
	//you can choose any amount of case statements
	default:		//optional
		statement(s);
}

switch语句必须遵循下面的规则：
* switch语句中的expression必须是一个整型或枚举类型，或者是一个class类型，其中class有一个单一的转换函数将其转换为整型或枚举类型
* 在一个switch中可以有任意数量的case语句。每个case后跟一个要比较的值和一个冒号
* case的constant-expression必须与switch中的变量具有相同的数据类型，且必须是一个常量或字面量
* 当被测试的变量等于case中的常量时，case后面的语句将被执行，直到遇到break语句为止
* 当遇到break语句时，switch终止，控制流跳转到switch语句后的下一行
* 不是每一个case都需要包含break。如果case语句不包含break，控制流将会继续后面的case，直到遇到break为止
* 一个switch语句可以有一个可选的default case，出现在switch的结尾。default case可用于上面所有case都不为真时执行一个任务。default case中的break语句不是必须的。

流程图
{{./pasted_image.png}}



















































