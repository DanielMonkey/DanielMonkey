Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-03-12T18:27:03+08:00

====== 05 C++变量类型 ======
Created Tuesday 12 March 2019

变量其实只不过是程序可操作的存储区的名称。
C++中每个变量都有指定的类型，类型决定了变量存储的大小和布局，该范围内的值都可以存储在内存中，运算符可应用于变量上。
变量的名称可以由字母、数字和下划线字符组成。它必须以字母或下划线开头。大写字母和小写字母是不同的，因为C++是大小写敏感的。
{{./pasted_image.png?width=800}}

C++中的变量定义
变量定义就是告诉编译器在何处创建变量的存储，以及如何创建变量的存储。
变量定义指定一个数据类型，并包含了该类型的一个或多个变量的列表，如下所示：
type variable_list;
在这里，type必须是一个有效的C++数据类型，可以是char、wchar_t、int、float、double、bool或者任何用户自定义的对象。
variable_list可以由一个或多个标识符名称组成，多个标识符之间用逗号分隔。

变量可以在声明的时候被初始化（指定一个初始值）。初始化器由一个等好，后跟一个常量表达式组成，如下所示：
type variable_name = value;
不带初始化的定义：带有静态存储持续时间的变量会被隐式初始化为NULL（所有字节的值都是0），其他所有变量的初始值是未定义的。

C++中的变量声明
变量声明向编译器保证变量以给定的类型和名称存在，这样编译器在不需要知道变量完整细节的情况下也能继续进一步的编译。变量声明只在编译时有它的意义，在程序连接时编译器需要实际的变量声明。
当你使用多个文件且只在一个文件中定义变量时（定义变量的文件在程序连接时是可用的），变量声明就显得非常有用。你可以使用extern关键字在任何地方声明一个变量。虽然你可以在C++程序中多次声明一个变量，但变量只能在某个文件、函数或代码块中被定义一次。

同样的，在函数声明时，提供一个函数名，而函数的实际定义则可以在任何地方进行。

C++中的左值(Lvalues)和右值(Rvalues)
C++中有两种类型的表达式：
* 左值(lvalue)：指向内存位置的表达式被称为左值(lvalue)表达式。左值可以出现在赋值号的左边或右边。
* 右值(rvalue)：术语右值(rvalue)指的是存储在内存中某些地址的数值。右值是不能对其进行赋值的表达式，也就是说，右值可以出现在赋值号的右边，但不能出现在赋值号的左边。

变量是左值，因此可以出现在赋值号的左边。数值型的字面值是右值，因此不能被赋值，不能出现在赋值号的左边。

























