Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-04-08T18:21:07+08:00

====== 02 For Loops ======
Created Monday 08 April 2019

for循环		多次执行一个语句序列，简化管理循环变量的代码。

for循环允许你编写一个执行特定次数的循环的重复控制结构。

语法
C++中for循环的语法：
for(init; condition; increment)
{
   statement(s);
}

下面是for循环的控制流：
1. init会首先被执行，且只会执行一次。这一步允许你声明并初始化任何循环控制变量。你也可以不在这里写任何语句，只要有一个分号出现即可。
2. 接下来，会判断condition。如果为真，则执行循环主体。如果为假，则不执行循环主体，且控制流会跳转到紧接着for循环的下一条语句。
3. 在执行完for循环主体后，控制流会跳回上面的increment语句。该语句允许你更新循环控制变量。该语句可以留空，只要在条件后有一个分号出现即可。
4. 条件再次被判断。如果为真，则执行循环，这个过程会不断重复（循环主体，然后增加步值，再然后重新判断条件）。在条件为假时，for循环终止。

流程图

{{./pasted_image.png}}


for语句允许简单的范围迭代
int my_array[5] = {1, 2, 3, 4, 5}
for(int &x : my_array)
上面for语句的第一部分定义被用来做范围迭代的变量，就像被声明在一般for循环的变量一样，其作用域仅只于循环的范围。而在":"之后的第二区块，代表被迭代的范围。

g++ -std=c++11 ForLop_2.cpp -o ForLop_2
















